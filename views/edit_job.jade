extends layout

mixin text_field(name, value)
  //- input(type=text name='property['+arguments[0]+']')

  +print_field(name, value)
  if value != null
    input(type="text" name=name value=value)

mixin print_field()
  if arguments != null
    if arguments[0] && arguments[1]
      p #{arguments[0]} #{arguments[1]}
    else if arguments[1]
      p #{arguments[1]}

//- Create an option and potentially set its selected state (if the form has
//- state) for a selection input type.
//-
//- param label     The text label to use
//- param form_var  The variable used to determine selected state
mixin select_option(label, form_var)
  option(value= label, selected= form_var === label ? true : false)= label

block content
  script.
    function go_back() {
      window.history.back();
    }

  a(href="" onclick="go_back()") Go Back

  h2 Job

  form(action=locals.loc.pathname, method='POST', novalidate)

    //- +text_field("cid", job.ClientKey)
    +print_field("PID: ", job.PropertyKey)
    +print_field("PID: ", job.property_id)
    +print_field("jobnum", job.JobNum)
    +print_field("Contact: ", job.JobContact)
    //- +print_field("Email: ", job.JobEmail)
    //- +print_field("Requested by: ", job.JobRequestedBy)
    +print_field("Notes: ", job.Notes)
    +print_field("Notes: ", job.JobNotes)

    label(for='property_jobstatus') Job Status:

    if job.JobStatus != null
      if job.JobStatus == 1
        b Ordered
      if job.JobStatus == 2
        b In the field
      else if job.JobStatus == 3
        b In drafting
      else if job.JobStatus == 4
        b Needs Review
      else if job.JobStatus == 5
        b In Revision
      else if job.JobStatus == 6
        b Completed
      br
    else
      b Not assigned
    br
    select(id='property_jobstatus', name='status')
      +select_option('Ordered', status)
      +select_option('In the Field', status)
      +select_option('In drafting', status)
      +select_option('Needs Review', status)
      +select_option('Revisions', status)
      +select_option('Completed', status)

    +print_field("Need by date: ", job.JobDateNeeded)
    //- +print_field("Assigned to: ", job.JobAssignedTo)

    +print_field("Created: ", job.DateCreated)
    +print_field("Edited: ", job.DateEdited)

    button(type='submit', name='action', value='update_property') Update Property

  // TODO: Validate!
  a(href='/jobs/destroy/' + job.PropertyKey) destroy
  //- &#32;-&#32;
